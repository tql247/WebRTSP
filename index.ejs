<!DOCTYPE html>
<html>
<head>
    <title>JSMpeg Stream Client</title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script type="text/javascript" src="/public/jsmpeg.min.js"></script>
</head>
<style>
    body {
        font-family: BlinkMacSystemFont, -apple-system, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
    }

    .view {
        display: flex;
        flex-wrap: wrap;
    }

    canvas {
        width: 100%;
        height: 100%;
    }

    .canvas-wrapper {
        flex-grow: 1;
    }

    .v1 {
        max-height: 90vh;
        max-width: 99vw;
    }

    .v2 {
        max-height: 45vh;
        max-width: 49vw;
    }

    .v3 {
        max-height: 32vh;
        max-width: 32vw;
    }

</style>
<body>
<form action="" id="add-stream-form" method="POST">
    <label for="rtps">RTSP</label><input type="text" name="rtsp" id="rtps">
    <input type="submit">
</form>

<div class="view">
</div>
<script type="text/javascript">
    function loadSocket(socket) {
        const viewType =  'v' + '<%=Math.ceil(Math.sqrt(camNum)) %>'
        const canvas = document.createElement('canvas');
        const canvasWrapper = document.createElement('div')
        canvasWrapper.className = "canvas-wrapper"
        canvasWrapper.classList.add(viewType)
        canvasWrapper.append(canvas)
        $(".view").append(canvasWrapper)
        const player = new JSMpeg.Player(socket, {canvas: canvas});
    }

    $(document).ready(() => {
        $("#add-stream-form").on('submit', (e) => {
            e.preventDefault();

            const data = $("#add-stream-form").serialize();
            $.ajax({
                type: "POST",
                url: "/addStream",
                data: data,
                async: true,
                success: (socketAddress) => {
                    loadSocket(socketAddress)
                }
            });

            return false;
        })


        <% listSocket.forEach((socket) => { %>
            loadSocket('<%= socket %>')
        <% }) %>
    })
</script>
</body>